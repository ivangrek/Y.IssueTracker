// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Y.IssueTracker.Web.Infrastructure;

namespace Y.IssueTracker.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211129083719_UpdateUserEntity")]
    partial class UpdateUserEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Y.IssueTracker.Categories.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b84c457-a617-4306-baa4-d78da2146a3b"),
                            IsActive = true,
                            Name = "Bug"
                        },
                        new
                        {
                            Id = new Guid("c1dc5ddc-8a36-4b15-9a61-eae62418f2b0"),
                            IsActive = true,
                            Name = "Task"
                        });
                });

            modelBuilder.Entity("Y.IssueTracker.Comments.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IssueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Y.IssueTracker.Issues.Domain.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssignedUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PriorityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("Y.IssueTracker.Priorities.Domain.Priority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3bc5378-c993-45cb-9858-88471a75fb01"),
                            IsActive = true,
                            Name = "High",
                            Weight = 1
                        },
                        new
                        {
                            Id = new Guid("f8e2a9a0-a3d8-48d9-b30d-cdb62645a8ed"),
                            IsActive = true,
                            Name = "Medium",
                            Weight = 2
                        },
                        new
                        {
                            Id = new Guid("266abbf5-dc7f-4052-9ab2-de3faf789d1f"),
                            IsActive = true,
                            Name = "Low",
                            Weight = 3
                        });
                });

            modelBuilder.Entity("Y.IssueTracker.Projects.Domain.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f944f0f-33f2-4024-8d05-cfa211e61989"),
                            IsActive = true,
                            Name = "First project"
                        },
                        new
                        {
                            Id = new Guid("e6173161-bf7e-415f-aae0-a2243265617d"),
                            IsActive = true,
                            Name = "Second project"
                        });
                });

            modelBuilder.Entity("Y.IssueTracker.Users.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("635ecf0d-a569-4e94-9c14-29f5d3fcf220"),
                            Email = "admin@example.com",
                            IsActive = true,
                            IsDefault = true,
                            Name = "Admin",
                            Password = "dGVzdA==",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("b5d61694-b355-46dc-afa1-2c385d2b3a7d"),
                            Email = "manager@example.com",
                            IsActive = true,
                            IsDefault = false,
                            Name = "Manager",
                            Password = "dGVzdA==",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("c04ab03d-49f1-4e03-9806-7282f9f61c54"),
                            Email = "user@example.com",
                            IsActive = true,
                            IsDefault = false,
                            Name = "User",
                            Password = "dGVzdA==",
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
